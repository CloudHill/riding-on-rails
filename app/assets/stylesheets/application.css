/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require react-datepicker
 *= require draft
 */

:root {
  --border-radius_1: 8px;
  --border-radius_2: 4px;
  --secondary-foreground: #666;
  --nav-background: #f0f0f0;
  --task-background: #f0f0f0;
  --task-background_hover: #f3f3f3;
  --tasklist-background: #e7e7e7;
  --tasklist-background_hover: #eaeaea;
  --button-background: #dfdfdf;
  --accent-color: rgb(250, 110, 110);
  --accent-foreground: black;
  --input-background: #fff;
  --menu-background: #ebebeb;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  -ms-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

body, textarea { 
  font-family: sans-serif;
}

input, textarea {
  font-size: 1em;
}

#app {
  display: flex;
}

/* 
 * TASKS 
 */

.tasks-container {
  flex: 1;
  height: 100vh;
  display: flex;
  flex-direction: column;
  padding: 16px;
}

.tasks {
  flex: 1;
  overflow-y: scroll;
}

.task {
  display: flex;
  padding: 8px;
  background: var(--task-background);  
  border-radius: var(--border-radius_1);
}

.task {
  margin-bottom: 4px;
  border: 2px solid transparent;
}

.task:hover {
  background: var(--task-background_hover)
}

.task-info {
  flex: 1;
  padding: 0 8px;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.task-note {
  color: var(--secondary-foreground);
  font-size: 0.8em;
  margin-top: 5px;
  white-space: pre-line;
}

/* task edit */

.task-editing {
  border-color: var(--accent-color);
}

.task-edit_form {
  width: 100%;
}

.title-input,
.note-input {
  width: 100%;
  background: var(--input-background);
  padding: 6px;
  border-radius: var(--border-radius_2);
}

.title-input input {
  width: 100%;
  background: transparent;
  outline: none;
  border: none;
}

.note-input {
  margin-top: 6px;
}

.note-input span {
  display: inline-block;
  width: 100%;
  outline: none;
  border: none;
  min-height: 1em;
}

.note-input span[contenteditable]:empty::before {
  content: "Note";
  color: gray;
}

/* completed task */

.task[completed] {
  order: 1;
}

.task[completed] .task-title,
.task[completed] .title-input input,
.task[completed] .note-input {
  color: var(--secondary-foreground);
  text-decoration: line-through;
}

/* task bar */

.task-bar {
  display: flex;
  margin-top: 6px;
}

.task-actions {
  margin-left: auto;
  display: flex;
}

/* task option */

.task-options {
  display: flex;
}

.task-option {
  display: flex;
  background: var(--button-background);
  align-items: center;
  border: none;
  height: 18px;
  padding: 3px;
  margin-right: 6px;
  border-radius: var(--border-radius_2);
}

.task-option[active] {
  background: var(--accent-color);
  color:var(--accent-foreground);
}

.task-option span {
  margin: 0 6px;
  font-size: 12px;
  white-space: nowrap;
  line-height: 0;
}

span.clear-input {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2px;
  margin: 0;
  background: #ffaeae;
  border-radius: 2px;
  cursor: pointer;
}

.note-input {
  font-size: 0.8em;  
}

/* add task */

.add-task {
  display: flex;
  margin-top: 20px;
  padding: 8px 8px 8px 16px;
  background: var(--task-background);  
  border-radius: var(--border-radius_1);
}

.add-task:hover {
  background: var(--task-background_hover)
}

.add-task_input {
  flex: 1;
  background: transparent;
  border: none;
  outline: none;
}

/* action button */

.action-button {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--button-background);
  border-radius: var(--border-radius_2);
  border: none;
  outline: none;
  height: 30px;
  padding: 2px 8px;
}

.icon-button {
  width: 30px;
}

.button-primary {
  background: var(--accent-color);
  color: var(--accent-foreground);
}

.task-actions .action-button {
  margin-right: 4px;
}

.task-actions .action-button:last-child {
  margin-right: 0;
}

.action-check {
  width: 24px;
  height: 24px;
  margin: 8px;
  padding: 2px;
  color: var(--accent-color);
  vertical-align: center;
  border: 3px solid var(--accent-color);
  border-radius: 50%;
}


/* 
 * NAV 
 */

.navbar {
  background: var(--nav-background);
  width: 260px;
  padding: 16px;
}

/* task list */

.tasklists-container {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.tasklists {
  flex: 1;
  overflow-y: scroll;
}

.tasklist {
  padding: 12px;
  margin-bottom: 10px;
  background: var(--tasklist-background);
  border-radius: var(--border-radius_2);
}

.tasklist:hover {
  background: var(--tasklist-background_hover);
}

/* add task list */

.add-tasklist {
  display: flex;
  margin-top: 20px;
  padding: 8px 8px 8px 16px;
  background: var(--tasklist-background);  
  border-radius: var(--border-radius_2);
}

.add-tasklist:hover {
  background: var(--tasklist-background_hover)
}

.add-tasklist_input {
  flex: 1;
  background: transparent;
  border: none;
  outline: none;
  min-width: 0;
}

/* context menu */

.context-menu {
  padding: 4px;
  width: 150px;
  margin: 0;
  position: absolute;
  box-shadow: 0 0 14px 0 #aaa;
  background-color: var(--menu-background);
  border-radius: var(--border-radius_1);
}

.context-button {
  width: 100%;
  border: none;
  outline: none;
  padding: 6px 10px;
  margin-bottom: 4px;
  text-align: left;
  border-radius: var(--border-radius_2);
}

.context-button:last-child {
  margin-bottom: 0;
}

.context-button:hover {
  background-color: var(--button-background);
}


